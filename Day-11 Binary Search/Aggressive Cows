int isPossible(int minDist,int cows,vector<int> &stalls){
    int n = stalls.size();
    int prev = stalls[0];
    --cows;
    for(int i=1;i<n;i++){
        if(stalls[i]-prev >= minDist) prev = stalls[i] , --cows;
    }
    return cows <= 0;
}
int aggressiveCows(vector<int> &stalls, int k){
    sort(stalls.begin(),stalls.end());
    int n = stalls.size();
    int low = 0 , high = stalls[n-1] - stalls[0];
    int minDist = high;
    while(low <= high){
        int mid = low + (high-low)/2;
        if(isPossible(mid,k,stalls)) minDist = mid , low = mid + 1;
        else high = mid - 1;
    }
    return minDist;
}
